{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Single-page-test\\\\client\\\\src\\\\pages\\\\Results.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Typography, Container, Paper, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const navigate = useNavigate();\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const userId = localStorage.getItem('userId');\n        if (!userId) {\n          navigate('/');\n          return;\n        }\n        const response = await axios.get(`http://localhost:5000/api/users/${userId}/test-results`);\n        setResults(response.data.testResults);\n      } catch (error) {\n        console.error('Failed to fetch results:', error);\n        // Handle error appropriately\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchResults();\n  }, [navigate]);\n  const handleRestart = () => {\n    localStorage.removeItem('userId');\n    navigate('/');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          align: \"center\",\n          children: \"Test Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), results && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              my: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              color: \"primary\",\n              children: [results.score, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"text.secondary\",\n              children: \"Your Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Your Answers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), results.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [\"Question \", index + 1, \": \", answer.answer]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, answer.questionId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              mt: 2\n            },\n            children: [\"Completed on: \", new Date(results.completedAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4,\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleRestart,\n            children: \"Take Test Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"6j6cAd7bHo/L9PYQ3K/7UBIkibU=\", false, function () {\n  return [useNavigate];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Box","Button","Typography","Container","Paper","CircularProgress","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Results","_s","navigate","results","setResults","loading","setLoading","fetchResults","userId","localStorage","getItem","response","get","data","testResults","error","console","handleRestart","removeItem","sx","display","justifyContent","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","elevation","p","variant","component","gutterBottom","align","textAlign","my","color","score","answers","map","answer","index","mb","questionId","Date","completedAt","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["D:/Projects/Single-page-test/client/src/pages/Results.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Container,\r\n  Paper,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\ninterface TestResult {\r\n  score: number;\r\n  answers: Array<{\r\n    questionId: string;\r\n    answer: string;\r\n  }>;\r\n  completedAt: string;\r\n}\r\n\r\nconst Results: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [results, setResults] = useState<TestResult | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchResults = async () => {\r\n      try {\r\n        const userId = localStorage.getItem('userId');\r\n        if (!userId) {\r\n          navigate('/');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get(`http://localhost:5000/api/users/${userId}/test-results`);\r\n        setResults(response.data.testResults);\r\n      } catch (error) {\r\n        console.error('Failed to fetch results:', error);\r\n        // Handle error appropriately\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchResults();\r\n  }, [navigate]);\r\n\r\n  const handleRestart = () => {\r\n    localStorage.removeItem('userId');\r\n    navigate('/');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ mt: 4 }}>\r\n        <Paper elevation={3} sx={{ p: 4 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n            Test Results\r\n          </Typography>\r\n\r\n          {results && (\r\n            <>\r\n              <Box sx={{ textAlign: 'center', my: 4 }}>\r\n                <Typography variant=\"h2\" color=\"primary\">\r\n                  {results.score}%\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                  Your Score\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box sx={{ mt: 4 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Your Answers:\r\n                </Typography>\r\n                {results.answers.map((answer, index) => (\r\n                  <Box key={answer.questionId} sx={{ mb: 2 }}>\r\n                    <Typography variant=\"body1\">\r\n                      Question {index + 1}: {answer.answer}\r\n                    </Typography>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                Completed on: {new Date(results.completedAt).toLocaleString()}\r\n              </Typography>\r\n            </>\r\n          )}\r\n\r\n          <Box sx={{ mt: 4, display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleRestart}\r\n            >\r\n              Take Test Again\r\n            </Button>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Results; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,GAAG,EACHC,MAAM,EACNC,UAAU,EACVC,SAAS,EACTC,KAAK,EACLC,gBAAgB,QACX,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAW1B,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAoB,IAAI,CAAC;EAC/D,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMqB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAACF,MAAM,EAAE;UACXN,QAAQ,CAAC,GAAG,CAAC;UACb;QACF;QAEA,MAAMS,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,mCAAmCJ,MAAM,eAAe,CAAC;QAC1FJ,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACC,WAAW,CAAC;MACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD;MACF,CAAC,SAAS;QACRT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,MAAMe,aAAa,GAAGA,CAAA,KAAM;IAC1BR,YAAY,CAACS,UAAU,CAAC,QAAQ,CAAC;IACjChB,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,IAAIG,OAAO,EAAE;IACX,oBACER,OAAA,CAACR,GAAG;MAAC8B,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,eAC5D1B,OAAA,CAACH,gBAAgB;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,oBACE9B,OAAA,CAACL,SAAS;IAACoC,QAAQ,EAAC,IAAI;IAAAL,QAAA,eACtB1B,OAAA,CAACR,GAAG;MAAC8B,EAAE,EAAE;QAAEG,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,eACjB1B,OAAA,CAACJ,KAAK;QAACoC,SAAS,EAAE,CAAE;QAACV,EAAE,EAAE;UAAEW,CAAC,EAAE;QAAE,CAAE;QAAAP,QAAA,gBAChC1B,OAAA,CAACN,UAAU;UAACwC,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAACC,YAAY;UAACC,KAAK,EAAC,QAAQ;UAAAX,QAAA,EAAC;QAEpE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EAEZxB,OAAO,iBACNN,OAAA,CAAAE,SAAA;UAAAwB,QAAA,gBACE1B,OAAA,CAACR,GAAG;YAAC8B,EAAE,EAAE;cAAEgB,SAAS,EAAE,QAAQ;cAAEC,EAAE,EAAE;YAAE,CAAE;YAAAb,QAAA,gBACtC1B,OAAA,CAACN,UAAU;cAACwC,OAAO,EAAC,IAAI;cAACM,KAAK,EAAC,SAAS;cAAAd,QAAA,GACrCpB,OAAO,CAACmC,KAAK,EAAC,GACjB;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb9B,OAAA,CAACN,UAAU;cAACwC,OAAO,EAAC,WAAW;cAACM,KAAK,EAAC,gBAAgB;cAAAd,QAAA,EAAC;YAEvD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAEN9B,OAAA,CAACR,GAAG;YAAC8B,EAAE,EAAE;cAAEG,EAAE,EAAE;YAAE,CAAE;YAAAC,QAAA,gBACjB1B,OAAA,CAACN,UAAU;cAACwC,OAAO,EAAC,IAAI;cAACE,YAAY;cAAAV,QAAA,EAAC;YAEtC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EACZxB,OAAO,CAACoC,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACjC7C,OAAA,CAACR,GAAG;cAAyB8B,EAAE,EAAE;gBAAEwB,EAAE,EAAE;cAAE,CAAE;cAAApB,QAAA,eACzC1B,OAAA,CAACN,UAAU;gBAACwC,OAAO,EAAC,OAAO;gBAAAR,QAAA,GAAC,WACjB,EAACmB,KAAK,GAAG,CAAC,EAAC,IAAE,EAACD,MAAM,CAACA,MAAM;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B;YAAC,GAHLc,MAAM,CAACG,UAAU;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAItB,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEN9B,OAAA,CAACN,UAAU;YAACwC,OAAO,EAAC,OAAO;YAACM,KAAK,EAAC,gBAAgB;YAAClB,EAAE,EAAE;cAAEG,EAAE,EAAE;YAAE,CAAE;YAAAC,QAAA,GAAC,gBAClD,EAAC,IAAIsB,IAAI,CAAC1C,OAAO,CAAC2C,WAAW,CAAC,CAACC,cAAc,CAAC,CAAC;UAAA;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA,eACb,CACH,eAED9B,OAAA,CAACR,GAAG;UAAC8B,EAAE,EAAE;YAAEG,EAAE,EAAE,CAAC;YAAEF,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE;UAAS,CAAE;UAAAE,QAAA,eAC5D1B,OAAA,CAACP,MAAM;YACLyC,OAAO,EAAC,WAAW;YACnBM,KAAK,EAAC,SAAS;YACfW,OAAO,EAAE/B,aAAc;YAAAM,QAAA,EACxB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAC1B,EAAA,CA3FID,OAAiB;EAAA,QACJZ,WAAW;AAAA;AAAA6D,EAAA,GADxBjD,OAAiB;AA6FvB,eAAeA,OAAO;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}