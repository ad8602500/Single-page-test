{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Single-page-test\\\\client\\\\src\\\\pages\\\\Test.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Typography, Container, Paper, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, LinearProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  id: '1',\n  question: 'What is your favorite programming language?',\n  options: ['JavaScript', 'Python', 'Java', 'C++']\n}, {\n  id: '2',\n  question: 'How many years of experience do you have?',\n  options: ['0-1 years', '1-3 years', '3-5 years', '5+ years']\n}, {\n  id: '3',\n  question: 'What is your preferred development environment?',\n  options: ['VS Code', 'IntelliJ', 'Eclipse', 'Sublime Text']\n}];\nconst Test = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const handleAnswerSelect = answer => {\n    setSelectedAnswer(answer);\n  };\n  const handleNext = () => {\n    if (selectedAnswer) {\n      setAnswers(prev => ({\n        ...prev,\n        [questions[currentQuestion].id]: selectedAnswer\n      }));\n      setSelectedAnswer('');\n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(prev => prev + 1);\n      } else {\n        handleSubmit();\n      }\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      const userId = localStorage.getItem('userId');\n      if (!userId) {\n        navigate('/');\n        return;\n      }\n      const score = calculateScore();\n      await axios.post(`http://localhost:5000/api/users/${userId}/test-results`, {\n        answers: Object.entries(answers).map(([questionId, answer]) => ({\n          questionId,\n          answer\n        })),\n        score\n      });\n      navigate('/results');\n    } catch (error) {\n      console.error('Failed to submit test:', error);\n      // Handle error appropriately\n    }\n  };\n  const calculateScore = () => {\n    // Simple scoring mechanism - can be modified based on requirements\n    return Math.floor(Object.keys(answers).length / questions.length * 100);\n  };\n  const progress = (currentQuestion + 1) / questions.length * 100;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          align: \"center\",\n          children: \"Assessment Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: progress,\n          sx: {\n            mb: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Question \", currentQuestion + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          sx: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: questions[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            value: selectedAnswer,\n            onChange: e => handleAnswerSelect(e.target.value),\n            children: questions[currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: option,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 28\n              }, this),\n              label: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4,\n            display: 'flex',\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            disabled: !selectedAnswer,\n            children: currentQuestion === questions.length - 1 ? 'Submit' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"oLqgVEj6XCRDzqfGt1WW5wNKzlI=\", false, function () {\n  return [useNavigate];\n});\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useNavigate","Box","Button","Typography","Container","Paper","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","LinearProgress","axios","jsxDEV","_jsxDEV","questions","id","question","options","Test","_s","navigate","currentQuestion","setCurrentQuestion","answers","setAnswers","selectedAnswer","setSelectedAnswer","handleAnswerSelect","answer","handleNext","prev","length","handleSubmit","userId","localStorage","getItem","score","calculateScore","post","Object","entries","map","questionId","error","console","Math","floor","keys","progress","maxWidth","children","sx","mt","elevation","p","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","value","mb","width","onChange","e","target","option","control","label","display","justifyContent","color","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Projects/Single-page-test/client/src/pages/Test.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Container,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  LinearProgress,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\ninterface Question {\r\n  id: string;\r\n  question: string;\r\n  options: string[];\r\n}\r\n\r\nconst questions: Question[] = [\r\n  {\r\n    id: '1',\r\n    question: 'What is your favorite programming language?',\r\n    options: ['JavaScript', 'Python', 'Java', 'C++'],\r\n  },\r\n  {\r\n    id: '2',\r\n    question: 'How many years of experience do you have?',\r\n    options: ['0-1 years', '1-3 years', '3-5 years', '5+ years'],\r\n  },\r\n  {\r\n    id: '3',\r\n    question: 'What is your preferred development environment?',\r\n    options: ['VS Code', 'IntelliJ', 'Eclipse', 'Sublime Text'],\r\n  },\r\n];\r\n\r\nconst Test: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState<{ [key: string]: string }>({});\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n\r\n  const handleAnswerSelect = (answer: string) => {\r\n    setSelectedAnswer(answer);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (selectedAnswer) {\r\n      setAnswers(prev => ({\r\n        ...prev,\r\n        [questions[currentQuestion].id]: selectedAnswer,\r\n      }));\r\n      setSelectedAnswer('');\r\n\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(prev => prev + 1);\r\n      } else {\r\n        handleSubmit();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) {\r\n        navigate('/');\r\n        return;\r\n      }\r\n\r\n      const score = calculateScore();\r\n      await axios.post(`http://localhost:5000/api/users/${userId}/test-results`, {\r\n        answers: Object.entries(answers).map(([questionId, answer]) => ({\r\n          questionId,\r\n          answer,\r\n        })),\r\n        score,\r\n      });\r\n\r\n      navigate('/results');\r\n    } catch (error) {\r\n      console.error('Failed to submit test:', error);\r\n      // Handle error appropriately\r\n    }\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    // Simple scoring mechanism - can be modified based on requirements\r\n    return Math.floor((Object.keys(answers).length / questions.length) * 100);\r\n  };\r\n\r\n  const progress = ((currentQuestion + 1) / questions.length) * 100;\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ mt: 4 }}>\r\n        <Paper elevation={3} sx={{ p: 4 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n            Assessment Test\r\n          </Typography>\r\n\r\n          <LinearProgress variant=\"determinate\" value={progress} sx={{ mb: 4 }} />\r\n\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Question {currentQuestion + 1} of {questions.length}\r\n          </Typography>\r\n\r\n          <FormControl component=\"fieldset\" sx={{ width: '100%' }}>\r\n            <FormLabel component=\"legend\">\r\n              {questions[currentQuestion].question}\r\n            </FormLabel>\r\n            <RadioGroup\r\n              value={selectedAnswer}\r\n              onChange={(e) => handleAnswerSelect(e.target.value)}\r\n            >\r\n              {questions[currentQuestion].options.map((option) => (\r\n                <FormControlLabel\r\n                  key={option}\r\n                  value={option}\r\n                  control={<Radio />}\r\n                  label={option}\r\n                />\r\n              ))}\r\n            </RadioGroup>\r\n          </FormControl>\r\n\r\n          <Box sx={{ mt: 4, display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleNext}\r\n              disabled={!selectedAnswer}\r\n            >\r\n              {currentQuestion === questions.length - 1 ? 'Submit' : 'Next'}\r\n            </Button>\r\n          </Box>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Test; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}